# -*- coding: utf-8 -*-
"""Neural Network Recommendation System - Implicit Feedback Factorization Model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v-EQEO_jjNXnmbwdM-74gZMbqXbIL4lM

# Hw3
### Recommendation System Engine

---



---

Model information

Implicit Feedback factorization Model

>
"""

from google.colab import drive
drive.mount('/content/gdrive')

import os
path = r'/content/gdrive/My Drive/Colab_Datasets'
os.chdir(path)

!pip3 install torch===1.3.1 torchvision===0.4.2 -f https://download.pytorch.org/whl/torch_stable.html
!pip install git+https://github.com/maciejkula/spotlight.git@master#egg=spotlight

import pandas as pd
import numpy as np

from spotlight.cross_validation import random_train_test_split
from spotlight.evaluation import rmse_score
from spotlight.factorization.explicit import ExplicitFactorizationModel
from spotlight.interactions import Interactions

df = pd.read_csv('DigitalMusic.csv')
df.head()
df1 = df[['reviewerID','asin','overall']]
df1.head(1)
# df1.isnull().sum()

df.reviewerID = pd.Categorical(df.reviewerID)

df['UserKey'] = df.reviewerID.cat.codes

df.asin = pd.Categorical(df.asin)
df['ProdKey'] = df.asin.cat.codes

df.dtypes

users = df.UserKey
prods = df.ProdKey         
ratings = df.overall

users1 = users.to_numpy(dtype=int)
prods1 = prods.to_numpy(dtype=int)
ratings1 = ratings.to_numpy(dtype=float)

interaction = Interactions(users1,prods1,ratings1)

train, test = random_train_test_split(interaction, random_state=np.random.RandomState(42))

print('Split into \n {} and \n {}.'.format(train, test))

starttime = datetime.now()
model = ExplicitFactorizationModel(n_iter=1)
model.fit(train, verbose=True)

train_rmse = rmse_score(model, train)
test_rmse = rmse_score(model, test)

stoptime = datetime.now()
runtime = stoptime - starttime
print('Runtime:{}'.format(runtime))
print('Split into \n training dataset size: {} \n testing dataset size: {}.'.format(train, test))
print('Train RMSE {:.3f}, test RMSE {:.3f}'.format(train_rmse, test_rmse))



"""






useful websites



> https://github.com/maciejkula/spotlight/tree/master/examples/movielens_explicit


> https://github.com/maciejkula/netrex/blob/master/examples/readme.nbconvert.ipynb

> https://towardsdatascience.com/introduction-to-recommender-system-part-2-adoption-of-neural-network-831972c4cbf7


> https://docs.scipy.org/doc/numpy/user/basics.types.html







"""

